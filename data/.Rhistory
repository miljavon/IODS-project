read.table(file = "student-mat.csv", sep = ";", header = T)
read.table(file = "student-por.csv", sep = ";", header = T)
read.table(file = "student-mat.csv", sep = ";", header = T)
read.table(file = "student-por.csv", sep = ";", header = T)
math<-read.table(file = "student-mat.csv", sep = ";", header = T)
por<-read.table(file = "student-por.csv", sep = ";", header = T)
math<-read.table(file = "student-mat.csv", sep = ";", header = T)
por<-read.table(file = "student-por.csv", sep = ";", header = T)
url<- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt"
alc <- read.table(url, sep = ";", header = TRUE)
alc <- read.table(url, sep = "/", header = TRUE)
alc <- read.table(url, sep = ",", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages(MASS)
data("Boston")
library(MASS)
data("Boston")
str(Boston)
pairs(Boston)
summary(Boston)
plot(Boston$crim)
plot(Boston$crim ~ Boston$age)
pairs(Boston)
install.packages("pairsD3")
require("pairsD3")
shinypairs(Boston)
knitr::opts_chunk$set(echo = TRUE)
summary(Boston)
cor_matrix<-cor(Boston) %>% round(digits = 2)
library(MASS)
library(tidyr)
cor_matrix<-cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
install.packages(corrplot)
install.packages("corrplot")
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(corrplot)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
summary(Boston)
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
install.packages("corrplot")
knitr::opts_chunk$set(echo = TRUE)
summary(Boston)
summary(Boston)
cor_matrix<-cor(Boston) %>% round(digits = 2)
library(tidyr)
summary(Boston)
cor_matrix<-cor(Boston) %>% round(digits = 2)
summary(Boston)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
install.packages("corrplot")
library(corrplot)
library(tidyr)
summary(Boston)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
install.packages("MASS")
library(MASS)
data("Boston")
str(Boston)
install.packages("corrplot")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(tidyr)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
scaled_crim <- boston_scaled$crim
scaled_crim <- boston_scaled$crim
boston_scaled<-as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
scaled_crim <- boston_scaled$crim
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled$crim <- NULL
boston_scaled<-as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
ind <- sample(n,  size = n * 0.8)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
library(MASS)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
dim(train)
dim(test)
library(MASS)
lda.fit <- lda(crime ~ ., data = train)
boston_scaled <- crime
lda.fit <- lda(crime ~ ., data = train)
summary(train)
boston_scaled <- crime
boston_scaled$crim <- NULL
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
train <- boston_scaled[ind,]
ind <- sample( 1:n,size = n * 0.8)
n <- nrow(boston_scaled)
ind <- sample( 1:n,size = n * 0.8)
ind <- sample(n,size = n * 0.8)
boston_scaled<-as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
boston_scaled <- crime
str(boston_scaled)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled<-as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
boston_scaled <- crime
n <- nrow(boston_scaled)
train <- boston_scaled[ind,]
str(boston_scaled)
test <- dplyr::select(test, -crime)
boston_scaled<- scale(Boston)
boston_scaled<-as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
boston_scaled$crime <- crime
n <- nrow(boston_scaled)
ind <- sample(n, size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
knitr::opts_chunk$set(echo = TRUE)
lda.fit <- lda(crime ~ ., data = train)
library(MASS)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2)
lda.arrows(lda.fit, myscale = 1)
plot(lda.fit, dimen = 2)
lda.arrows(lda.fit, myscale = 1)
testcrime <- test$crime
testcrime <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = testcrime, predicted = lda.pred$class)
library(Boston)
library(MASS)
data(Boston)
scale(Boston)
sandard_boston <- scale(Boston)
dist_eu <- dist(Boston)
km <-kmeans(dist_eu, centers = 4)
dist_eu <- dist(Boston)
km <-kmeans(dist_eu, centers = 4)
pairs(Boston, col = km$cluster)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
dist_eu <- dist(Boston)
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
ggpairs(Boston, col = km$cluster)
library(ggplot2)
ggpairs(Boston, col = km$cluster)
library(ggpairs)
library(ggplot2)
library(GGally)
dist_eu <- dist(Boston)
ggpairs(Boston, col = km$cluster)
pairs(Boston, col = km$cluster)
p <- ggpairs(Boston, mapping = aes(col = km$cluster, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
pairs(Boston, col = km$cluster)
pairs(sandard_boston, col = km$cluster)
pairs(sandard_boston, col = km$cluster)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
summary(hd)
summary(gii)
dev_rank <-hd$HDI.Rank
country <- hd$Country
hdi <- hd$Human.Development.Index..HDI.
life<-hd$Life.Expectancy.at.Birth
gni_minus_hdi <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
laborm <- gii$Labour.Force.Participation.Rate..Male.
dev_rank <-hd$HDI.Rank
hdcountry <- hd$Country
hdi <- hd$Human.Development.Index..HDI.
life<-hd$Life.Expectancy.at.Birth
eduexp<-hd$Expected.Years.of.Education
edumean <- hd$Mean.Years.of.Education
gni <- hd$Gross.National.Income..GNI..per.Capita
gni_minus_hdi <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
giirank <- gii$GII.Rank
giicountry <- gii$Country
gii <- gii$Gender.Inequality.Index..GII.
mother_dead <- gii$Maternal.Mortality.Ratio
preggo <- gii$Adolescent.Birth.Rate
repres <- gii$Percent.Representation.in.Parliament
seceduf <- gii$Population.with.Secondary.Education..Female.
secedum <- gii$Population.with.Secondary.Education..Male.
laborf <- gii$Labour.Force.Participation.Rate..Female.
laborm <- gii$Labour.Force.Participation.Rate..Male.
dev_rank <-hd$HDI.Rank
hdcountry <- hd$Country
hdi <- hd$Human.Development.Index..HDI.
life<-hd$Life.Expectancy.at.Birth
eduexp<-hd$Expected.Years.of.Education
edumean <- hd$Mean.Years.of.Education
gni <- hd$Gross.National.Income..GNI..per.Capita
gni_minus_hdi <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
giirank <- gii$GII.Rank
giicountry <- gii$Country
gii <- gii$Gender.Inequality.Index..GII.
mother_dead <- gii$Maternal.Mortality.Ratio
preggo <- gii$Adolescent.Birth.Rate
repres <- gii$Percent.Representation.in.Parliament
seceduf <- gii$Population.with.Secondary.Education..Female.
secedum <- gii$Population.with.Secondary.Education..Male.
laborf <- gii$Labour.Force.Participation.Rate..Female.
laborm <- gii$Labour.Force.Participation.Rate..Male.
ratioe <- mutate(gii, ratioedu = (seceduf/secedum)
ratiol <- mutate(gii, ratiolabour = laborf/laborm)
ratioe <- mutate(gii, ratioedu = seceduf/secedum)
library(dplyr)
ratioe <- mutate(gii, ratioedu = seceduf/secedum)
ratiol <- mutate(gii, ratiolabour = laborf/laborm)
join_by <- c("giicountry","hdcountry")
hd_gii <- inner_join(gii, hd, by = join_by, suffix = c(".gii", ".hd") )
human <- inner_join(gii, hd, by = join_by, suffix = c(".gii", ".hd") )
